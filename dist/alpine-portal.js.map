{"version":3,"file":"alpine-portal.js","sources":["../src/Portal.js","../src/index.js","../src/build.js"],"sourcesContent":["/**\r\n * Portal that controls the teleportation process.\r\n *\r\n * @since 0.1.0\r\n * @since 0.2.0 Instead of the `window.onresize` event, `window.mediaMatch` was used.\r\n *\r\n * @param {HTMLElement} el The element for which the portal is active.\r\n * @constructor\r\n */\r\nfunction Portal(el) {\r\n\r\n    /**\r\n     * Target selector.\r\n     *\r\n     * @since 0.1.0\r\n     * @type {string|null}\r\n     */\r\n    this.target = null;\r\n\r\n    /**\r\n     * Screen breakpoint.\r\n     *\r\n     * @since 0.1.0\r\n     * @type {int}\r\n     */\r\n    this.screen = 0;\r\n\r\n    /**\r\n     * The element belonging to the first parent so that it can be reverted to it after teleportation.\r\n     *\r\n     * @since 0.1.0\r\n     * @type {HTMLElement}\r\n     */\r\n    const elRealParent = el.parentElement;\r\n\r\n    /**\r\n     * The media query object that checks the page resize based on the CSS engine.\r\n     *\r\n     * @since 0.2.0\r\n     * @type {MediaQueryList|null}\r\n     */\r\n    let mediaQuery = null;\r\n\r\n    /**\r\n     * Initializes the media query based on the current size of the portal screen from the beginning.\"\r\n     *\r\n     * @since 0.2.0\r\n     */\r\n    this.update = () => {\r\n        // If there was a portal previously.\r\n        if (mediaQuery) {\r\n            // Turn off the previous portal.\r\n            mediaQuery.removeEventListener('change', this.onResize);\r\n            mediaQuery = null;\r\n        }\r\n\r\n        // When the screen is at 0, the portal teleportation is off.\r\n        if (this.screen === 0) return;\r\n\r\n        // The min-width or max-width state of the media query is determined based on the negative/positive sign of the screen size.\r\n        mediaQuery = window.matchMedia(`(${this.screen > 0 ? 'min' : 'max'}-width: ${Math.abs(this.screen)}px)`);\r\n\r\n        // Turn on the portal.\r\n        mediaQuery.addEventListener('change', this.onResize);\r\n    }\r\n\r\n    /**\r\n     * Window resize event.\r\n     *\r\n     * @since 0.1.0\r\n     * @since 0.2.0 The usage of `window.onresize` event has been changed to `window.meatchMedia` and its `addEventListener` method of type 'change'.\r\n     *\r\n     * @param {MediaQueryList} e The media query object.\r\n     */\r\n    this.onResize = (e) => {\r\n        // When the conditions were met for teleporting to the target.\r\n        if (e.matches) {\r\n            document.querySelector(this.target).appendChild(el);\r\n        }\r\n        // When the conditions were met for returning to the initial position, then it should be teleported back to the initial position.\r\n        else {\r\n            elRealParent.appendChild(el);\r\n        }\r\n    }\r\n\r\n    // For the next tick, set up the screen resize event to be executed and checked at the beginning of document load.\r\n    window.Alpine.nextTick(() => this.onResize(mediaQuery));\r\n}\r\n\r\nexport default Portal;","import Portal from \"./Portal\";\r\n\r\n/**\r\n * List of portals... Currently not in use.\r\n *\r\n * @since 0.1.0\r\n * @type {Portal[]}\r\n */\r\nconst portals = [];\r\n\r\nexport default function (Alpine) {\r\n    Alpine.directive('portal', (el, {value, expression}, {evaluate}) => {\r\n        // Defining a portal object on the element itself.\r\n        if (!value && el._x_portal === undefined) {\r\n            el._x_portal = new Portal(el);\r\n            portals.push(el._x_portal);\r\n        }\r\n\r\n        // If there is no value for the expression, ignore it.\r\n        if (expression === false) return;\r\n\r\n        // If the directive value is not present, it is in the process of setting the target property of the portal.\r\n        if (!value) {\r\n            value = 'target';\r\n        }//\r\n        // If the value is provided for the directive, that value is the name of a portal property, and the expression must also be evaluated.\r\n        else {\r\n            expression = evaluate(expression);\r\n        }\r\n\r\n        // Set the property for the portal.\r\n        el._x_portal[value] = expression;\r\n\r\n        // If the screen size breakpoint has changed, update the portal.\r\n        if (value && value === 'screen') {\r\n            el._x_portal.update();\r\n        }\r\n    });\r\n};","import AlpinePortal from \"./index\";\r\n\r\n/**\r\n * For when using a CDN.\r\n *\r\n * @since 0.1.0\r\n */\r\ndocument.addEventListener('alpine:init', () => {\r\n    AlpinePortal(window.Alpine);\r\n});"],"names":["Portal","el","target","screen","elRealParent","parentElement","mediaQuery","update","removeEventListener","onResize","window","matchMedia","Math","abs","addEventListener","e","matches","document","querySelector","appendChild","Alpine","nextTick","portals","directive","value","expression","evaluate","_x_portal","undefined","push","AlpinePortal"],"mappings":"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"}